{"version":3,"file":"static/js/277.ad7f61e4.chunk.js","mappings":"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","sources":["components/Button.tsx","pages/VideoUpload.tsx","utils/htmlEntities.ts"],"sourcesContent":["type Props = {\n\tname: string;\n\tinputText: string;\n\tnavigation?: boolean;\n\tclickHandler: () => void;\n};\n\nconst Button = ({ name, clickHandler, inputText, navigation }: Props) => (\n\t<button\n\t\tname={inputText}\n\t\ttype=\"button\"\n\t\tonClick={clickHandler}\n\t\tclassName={navigation ? 'navigation-button' : 'button'}\n\t>\n\t\t{name}\n\t</button>\n);\n\nexport default Button;\n","import { useState } from 'react';\nimport Button from '../components/Button';\nimport htmlEntities from '../utils/htmlEntities';\nimport { uploadContext } from '../context/UploadContext';\n\nconst VideoUpload = () => {\n\tconst [selectedFiles, setSelectedFiles] = useState<FileList | null>(null);\n\tconst [selectedVideoName, setSelectedVideoName] = useState('');\n\tconst [displaySelectVideoMsg, setDisplaySelectVideoMsg] = useState(false);\n\tconst [displayReadyOnlyMsg, setDisplayReadyOnlyMsg] = useState(false);\n\n\tconst { upload, setProgress } = uploadContext();\n\n\tconst clickHandler = () => {\n\t\tif (selectedFiles?.length && selectedVideoName.trim() !== '') {\n\t\t\t// Make a copy of the selected file and send the copy to the upload function\n\t\t\t// So when we set its state to null the reference of the file sent to upload remains the same\n\t\t\tconst file = new File([selectedFiles[0]], selectedFiles[0].name, {\n\t\t\t\ttype: selectedFiles[0].type,\n\t\t\t});\n\t\t\tupload(file, selectedVideoName);\n\t\t\tsetSelectedVideoName('');\n\t\t\tsetSelectedFiles(null);\n\t\t\treturn;\n\t\t}\n\t\tsetDisplaySelectVideoMsg(true);\n\t\tsetSelectedFiles(null);\n\t};\n\n\tconst changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetProgress(0);\n\t\tif (event.target.files?.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSelectedFiles(event.target.files);\n\t\tsetDisplaySelectVideoMsg(false);\n\t\tsetDisplayReadyOnlyMsg(false);\n\n\t\t// Get the file name without the extension\n\t\tconst originalFileName = (event.target.files as FileList)[0].name;\n\t\tconst extensionStartIndex = originalFileName.lastIndexOf('.');\n\n\t\tconst fileName = originalFileName\n\t\t\t.split('')\n\t\t\t.filter((_element, index) => index < extensionStartIndex)\n\t\t\t.join('');\n\t\tsetSelectedVideoName(fileName);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className=\"page-title\">Video Upload</h1>\n\t\t\t<div className=\"video-upload\">\n\t\t\t\t<label htmlFor=\"video\" className=\"button video-upload__label\">\n\t\t\t\t\tChoose File\n\t\t\t\t</label>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\taccept=\"video/*\"\n\t\t\t\t\tname=\"video\"\n\t\t\t\t\tid=\"video\"\n\t\t\t\t\tclassName=\"video-upload__file\"\n\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t/>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Rename File\"\n\t\t\t\t\treadOnly={!selectedFiles}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tif (e.target.value.trim().length === 0) {\n\t\t\t\t\t\t\t// File needs to have a name\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetSelectedVideoName(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={() => {\n\t\t\t\t\t\tif (!selectedVideoName?.trim()) {\n\t\t\t\t\t\t\t// If there is no selectedVideoName it means the user has not chosen a file yet\n\t\t\t\t\t\t\tsetDisplayReadyOnlyMsg(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"video-upload__input\"\n\t\t\t\t\tvalue={selectedVideoName}\n\t\t\t\t/>\n\n\t\t\t\t<Button\n\t\t\t\t\tinputText=\"Upload\"\n\t\t\t\t\tname={`${htmlEntities.add} Upload`}\n\t\t\t\t\tclickHandler={clickHandler}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t{selectedVideoName && selectedFiles && (\n\t\t\t\t<div className=\"video-selected\">\n\t\t\t\t\t<span>{`You have selected \"${selectedVideoName}\"`}</span>\n\t\t\t\t\t<span>{`Please click on ${htmlEntities.add} Upload`} </span>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{displayReadyOnlyMsg && !selectedFiles && (\n\t\t\t\t<div className=\"select-video\">\n\t\t\t\t\t<span>Please choose a file so you can rename it!</span>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{displaySelectVideoMsg && (\n\t\t\t\t<div className=\"select-video\">\n\t\t\t\t\t<span>Please choose a video file!</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default VideoUpload;\n","import { decode } from 'html-entities';\r\n\r\n// decode the html entity code to be shown in the browser\r\nconst htmlEntities = {\r\n\tadd: decode('&#43;'),\r\n\t// more html entities can be added in the future\r\n};\r\n\r\nexport default htmlEntities;\r\n"],"names":["_ref","name","clickHandler","inputText","navigation","_jsx","type","onClick","className","children","VideoUpload","selectedFiles","setSelectedFiles","useState","selectedVideoName","setSelectedVideoName","displaySelectVideoMsg","setDisplaySelectVideoMsg","displayReadyOnlyMsg","setDisplayReadyOnlyMsg","upload","setProgress","uploadContext","_jsxs","_Fragment","htmlFor","accept","id","onChange","event","_event$target$files","target","files","length","originalFileName","extensionStartIndex","lastIndexOf","fileName","split","filter","_element","index","join","placeholder","readOnly","e","value","trim","onKeyDown","Button","concat","htmlEntities","add","file","File","decode"],"sourceRoot":""}