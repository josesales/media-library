{"version":3,"file":"static/js/69.03a63c7c.chunk.js","mappings":"4LAOO,MAAMA,EAAYA,IAMjBC,UACN,IACC,MAAMC,OCZUD,WAClB,IAOC,aANuBE,EAAAA,EAAcC,IAAIC,EAAO,CAC/CC,QAAS,CACR,eAAgB,uBAIFC,IACjB,CAAE,MAAOC,GAC0B,IAADC,EAAAC,EAAjC,GAAIF,aAAiBG,EAAAA,GAEpB,YADAC,QAAQC,IAAkB,QAAfJ,EAACD,EAAMM,gBAAQ,IAAAL,GAAM,QAANC,EAAdD,EAAgBF,YAAI,IAAAG,OAAN,EAAdA,EAAsBF,MAGpC,GDFgCJ,CAAI,UAClCW,GAASC,EAAAA,EAAAA,IAAUd,GACpB,CAAE,MAAOM,GACRI,QAAQC,IAAIL,EACb,G,sBEZF,MAaA,EAbkBS,IAAuB,IAAtB,MAAEC,GAAcD,EAClC,OACCE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAsBC,UAAQ,EAACH,UAAU,mBAAkBC,UAC1DC,EAAAA,EAAAA,KAAA,UACCE,IAAG,GAAAC,OAAKC,EAAAA,EAAO,eAAAD,OAAcP,EAAMS,GAAE,KAAAF,OAAIP,EAAMU,SAASC,MAAM,KAAK,IACnEC,KAAMZ,EAAMU,YAHFV,EAAMS,KAMlBL,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAEH,EAAMa,SACrC,ECCR,EAXmBd,IAA6B,IAA5B,OAAEf,EAAS,IAAWe,EACzC,OACCK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SACP,KAAb,OAANnB,QAAM,IAANA,OAAM,EAANA,EAAQ8B,SACRV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qCAEE,OAANnB,QAAM,IAANA,OAAM,EAANA,EAAQ+B,KAAKf,IAAUI,EAAAA,EAAAA,KAACY,EAAS,CAAgBhB,MAAOA,GAAjBA,EAAMS,OAEzC,ECaR,EAtBaQ,KACZ,MAAOC,EAASC,IAAaC,EAAAA,EAAAA,WAAS,GAChCvB,GAAWwB,EAAAA,EAAAA,KACXrC,GAASsC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMvB,MAAMhB,SAUrD,OARAwC,EAAAA,EAAAA,YAAU,KACT,WACCL,GAAU,SACJtB,EAASf,KACfqC,GAAU,EACV,EAJD,EAII,GACF,CAACtB,KAGHI,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAtB,SAAA,EACCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,oBAE1Be,GAAUd,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,IAAM1C,IAAUoB,EAAAA,EAAAA,KAACuB,EAAU,CAAC3C,OAAQA,MACpD,C","sources":["redux/video/videoThunk.ts","utils/requestSender.ts","components/VideoItem.tsx","components/VideoItems.tsx","pages/Home.tsx"],"sourcesContent":["import type { UnknownAction } from 'redux';\nimport type { ThunkAction } from 'redux-thunk';\nimport type { Video } from '../../interfaces/models/video';\nimport { get } from '../../utils/requestSender';\nimport type { RootState } from '../store';\nimport { setVideos } from './videoReducer';\n\nexport const getVideos = (): ThunkAction<\n\tPromise<void>,\n\tRootState,\n\tunknown,\n\tUnknownAction\n> => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst videos: Video[] = await get('/video');\n\t\t\tdispatch(setVideos(videos));\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n","import { AxiosError } from 'axios';\nimport axiosInstance from './axiosInstance';\n\nexport const get = async (route: string) => {\n\ttry {\n\t\tconst response = await axiosInstance.get(route, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t});\n\n\t\treturn response.data;\n\t} catch (error) {\n\t\tif (error instanceof AxiosError) {\n\t\t\tconsole.log(error.response?.data?.error);\n\t\t\treturn;\n\t\t}\n\t}\n};\n\n// More requests (post, put, patch, delete) can be added in the future\n","import type { Video } from '../interfaces/models/video';\r\nimport { baseUrl } from '../utils/axiosInstance';\r\n\r\ntype Props = {\r\n\tvideo: Video;\r\n};\r\n\r\nconst VideoItem = ({ video }: Props) => {\r\n\treturn (\r\n\t\t<div className=\"video-item\">\r\n\t\t\t<video key={video.id} controls className=\"video-item__file\">\r\n\t\t\t\t<source\r\n\t\t\t\t\tsrc={`${baseUrl}/playVideo/${video.id}/${video.mimetype.split('/')[1]}`}\r\n\t\t\t\t\ttype={video.mimetype}\r\n\t\t\t\t/>\r\n\t\t\t</video>\r\n\t\t\t<span className=\"video-item__name\">{video.name}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default VideoItem;\r\n","import type { Video } from '../interfaces/models/video';\r\nimport VideoItem from './VideoItem';\r\n\r\ntype Props = {\r\n\tvideos: Video[];\r\n};\r\n\r\nconst VideoItems = ({ videos = [] }: Props) => {\r\n\treturn (\r\n\t\t<div className=\"video-items\">\r\n\t\t\t{videos?.length === 0 ? (\r\n\t\t\t\t<h1>No uploaded videos at the moment</h1>\r\n\t\t\t) : (\r\n\t\t\t\tvideos?.map((video) => <VideoItem key={video.id} video={video} />)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default VideoItems;\r\n","import { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { getVideos } from '../redux/video/videoThunk';\nimport Loader from '../components/Loader';\nimport VideoItems from '../components/VideoItems';\n\nconst Home = () => {\n\tconst [loading, isLoading] = useState(false);\n\tconst dispatch = useAppDispatch();\n\tconst videos = useAppSelector((state) => state.video.videos);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tisLoading(true);\n\t\t\tawait dispatch(getVideos());\n\t\t\tisLoading(false);\n\t\t})();\n\t}, [dispatch]);\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className=\"page-title\">Uploaded Videos</h1>\n\n\t\t\t{loading ? <Loader /> : videos && <VideoItems videos={videos} />}\n\t\t</>\n\t);\n};\n\nexport default Home;\n"],"names":["getVideos","async","videos","axiosInstance","get","route","headers","data","error","_error$response","_error$response$data","AxiosError","console","log","response","dispatch","setVideos","_ref","video","_jsxs","className","children","_jsx","controls","src","concat","baseUrl","id","mimetype","split","type","name","length","map","VideoItem","Home","loading","isLoading","useState","useAppDispatch","useAppSelector","state","useEffect","_Fragment","Loader","VideoItems"],"sourceRoot":""}